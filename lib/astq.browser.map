{"version":3,"sources":["node_modules/browser-pack/_prelude.js","node_modules/asty/lib/asty.node.js","node_modules/cache-lru/lib/cache-lru.js","node_modules/pegjs-util/PEGUtil.js","src/astq-adapter-asty.js","src/astq-adapter-mozast.js","src/astq-adapter-parse5.js","src/astq-adapter-xmldom.js","src/astq-adapter.js","src/astq-funcs-std.js","src/astq-funcs.js","src/astq-query-exec.js","src/astq-query-trace.js","src/astq-query.js","src/astq-util.js","src/astq-version.js","src/astq.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","ASTY","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","_dereq_","_classCallCheck","instance","Constructor","TypeError","Object","defineProperty","value","_typeof","Symbol","iterator","obj","constructor","prototype","_createClass","defineProperties","target","props","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","ASTYBase","ctx","T","A","C","arguments","ASTy","L","O","P","name","hasOwnProperty","set","Array","add","line","column","offset","_this","_len","args","_key","keys","forEach","_this2","_len2","_key2","idx","indexOf","pos","_this3","_len3","_key3","_ins","node","isA","splice","arg","_this4","_len4","_key4","_add","push","_this5","_len5","_key5","found","j","serialize","default","2","ASTYDump","maxDepth","undefined","Infinity","out","walk","depth","first","toString","hex","ch","charCodeAt","toUpperCase","replace","RegExp","source","JSON","stringify","3","ASTYMerge","takePos","attrMap","attrs","attrSource","attrTarget","get","childs","child","4","ASTYSerialize","asty","serializeNode","clone","parse","map","json","unserializeNode","create","5","version","major","minor","micro","date","6","ASTYWalk","cb","when","_walk","parent","7","_interopRequireDefault","__esModule","_astyBase","_astyBase2","_astyMerge","_astyMerge2","_astyWalk","_astyWalk2","_astyDump","_astyDump2","_astySerialize","_astySerialize2","_astyVersion","_astyVersion2","ASTYCtx","ASTYNode","mixins","mixin","proto","slice","method","type","init","unserialize","./asty-base.js","./asty-dump.js","./asty-merge.js","./asty-serialize.js","./asty-version.js","./asty-walk.js","CacheLRU","_index","_LRU","newer","_MRU","older","_cur","_max","_dispose","_purge","each","val","expires","Date","now","del","_promote","_attach","_detach","root","factory","PEGUtil","makeAST","location","options","util","__makeAST","start","makeUnroll","list","take","__SyntaxError","result","unshift","excerpt","txt","b","extract","len","substr","prolog","token","epilog","parser","ast","error","SyntaxError","definedOrElse","fallback","message","expected","errorMessage","noFinalNewline","prefix1","prefix2","msg","ASTQAdapterASTY","attr","ASTQAdapterMozAST","checkField","field","taste","names","ASTQAdapterParse5","Node","nodeName","parentNode","childNodes","concat","values","filter","ASTQAdapterXMLDOM","nodeType","hasChildNodes","attributes","hasAttributes","getAttribute","ASTQAdapter","_adapters","adapter","force","adapters","getParentNode","pchilds","getChildNodes","parents","stdfuncs","getNodeType","sep","getNodeAttrNames","join","nth","num","parseInt","last","count","String","below","other","follows","pathOfT","reverse","pathOfOther","Math","min","in","str","index","sub","from","trim","lc","toLowerCase","uc","ASTQFuncs","_funcs","func","apply","_astqUtil","_astqQueryTrace","ASTQQueryExec","params","funcs","trace","_possibleConstructorReturn","__proto__","getPrototypeOf","Q","traceBegin","output","execPath","traceEnd","nodes","resultExplicit","execStep","axis","match","id","matchAndTake","execFilter","op","leftSibling","sentinel","expr","execExpr","_astqUtil2","truthy","execExprConditionalBinary","execExprConditionalTernary","execExprLogical","execExprBitwise","execExprRelational","execExprArithmetical","execExprUnary","execExprFuncCall","execExprAttribute","execExprParam","execExprLiteralString","execExprLiteralRegExp","execExprLiteralNumber","execExprLiteralValue","execExprPath","v1","coerce","v2","pow","v","run","getNodeAttrValue","ASTQQueryTrace","pad","_prefixOf","prefixOf","console","log","_prefixOf2","_astqQueryExec","ASTQQueryParse","ctor","peg$SyntaxError","captureStackTrace","peg$subclass","buildMessage","DESCRIBE_EXPECTATION_FNS","literal","expectation","text","escapedParts","parts","classEscape","dump","end","ASTQUtil","isNaN","Boolean","Number","_astqAdapter","_astqAdapterXmldom","_astqAdapterParse","_astqAdapterMozast","_astqAdapterAsty","_astqFuncs","_astqFuncsStd","_astqQuery","_astqVersion","ASTQ","_adapter","_astqAdapter2","register","_astqAdapterXmldom2","_astqAdapterParse2","_astqAdapterMozast2","_astqAdapterAsty2","_astqFuncs2","_astqFuncsStd2","_cache","_astqVersion2","unregister","entries","limit","selector","query","_astqQuery2","compile","select","execute"],"mappings":"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","file":"bundle.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2016 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.ASTY = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2016 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nvar ASTYBase = function () {\n    function ASTYBase() {\n        _classCallCheck(this, ASTYBase);\n    }\n\n    _createClass(ASTYBase, [{\n        key: \"init\",\n\n        /*  AST node initialization  */\n        value: function init(ctx, T, A, C) {\n            if (arguments.length < 2) throw new Error(\"init: invalid number of arguments\");\n            this.ctx = ctx;\n            this.ASTy = true;\n            this.T = T;\n            this.L = { L: 0, C: 0, O: 0 };\n            this.A = {};\n            this.C = [];\n            this.P = null;\n            if ((typeof A === \"undefined\" ? \"undefined\" : _typeof(A)) === \"object\") {\n                for (var name in A) {\n                    if (A.hasOwnProperty(name)) this.set(name, A[name]);\n                }\n            }\n            if ((typeof C === \"undefined\" ? \"undefined\" : _typeof(C)) === \"object\" && C instanceof Array) this.add(C);\n            return this;\n        }\n\n        /*  check the type of an AST node  */\n\n    }, {\n        key: \"type\",\n        value: function type(T) {\n            if (arguments.length === 0) return this.T;else if (arguments.length === 1) {\n                this.T = T;\n                return this;\n            } else throw new Error(\"type: invalid number of arguments\");\n        }\n\n        /*  set the parsing position   */\n\n    }, {\n        key: \"pos\",\n        value: function pos(line, column, offset) {\n            if (arguments.length === 0) return {\n                line: this.L.L,\n                column: this.L.C,\n                offset: this.L.O\n            };else if (arguments.length <= 3) {\n                this.L.L = line || 0;\n                this.L.C = column || 0;\n                this.L.O = offset || 0;\n                return this;\n            } else throw new Error(\"pos: invalid number of arguments\");\n        }\n\n        /*  set AST node attributes  */\n\n    }, {\n        key: \"set\",\n        value: function set() {\n            var _this = this;\n\n            for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {\n                args[_key] = arguments[_key];\n            }\n\n            if (args.length === 1 && _typeof(args[0]) === \"object\") {\n                Object.keys(args[0]).forEach(function (key) {\n                    _this.A[key] = args[0][key];\n                });\n            } else if (args.length === 2) this.A[args[0]] = args[1];else throw new Error(\"set: invalid number of arguments\");\n            return this;\n        }\n\n        /*  unset AST node attributes  */\n\n    }, {\n        key: \"unset\",\n        value: function unset() {\n            var _this2 = this;\n\n            for (var _len2 = arguments.length, args = Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n                args[_key2] = arguments[_key2];\n            }\n\n            if (args.length === 1 && _typeof(args[0]) === \"object\" && args[0] instanceof Array) {\n                args[0].forEach(function (key) {\n                    delete _this2.A[key];\n                });\n            } else if (args.length === 1) delete this.A[args[0]];else throw new Error(\"unset: invalid number of arguments\");\n            return this;\n        }\n\n        /*  get AST node attributes  */\n\n    }, {\n        key: \"get\",\n        value: function get(key) {\n            if (arguments.length !== 1) throw new Error(\"get: invalid number of arguments\");\n            if (typeof key !== \"string\") throw new Error(\"get: invalid key argument\");\n            return this.A[key];\n        }\n\n        /*  get names of all AST node attributes  */\n\n    }, {\n        key: \"attrs\",\n        value: function attrs() {\n            return Object.keys(this.A);\n        }\n\n        /*  return current sibling position  */\n\n    }, {\n        key: \"nth\",\n        value: function nth() {\n            if (this.P === null) return 1;\n            var idx = this.P.C.indexOf(this);\n            if (idx < 0) throw new Error(\"nth: internal error -- node not in childs of its parent\");\n            return idx;\n        }\n\n        /*  insert child AST node(s)  */\n\n    }, {\n        key: \"ins\",\n        value: function ins(pos) {\n            var _this3 = this;\n\n            for (var _len3 = arguments.length, args = Array(_len3 > 1 ? _len3 - 1 : 0), _key3 = 1; _key3 < _len3; _key3++) {\n                args[_key3 - 1] = arguments[_key3];\n            }\n\n            if (args.length === 0) throw new Error(\"ins: invalid number of arguments\");\n            if (pos < 0) pos = this.C.length + 1 - pos;\n            if (!(0 <= pos && pos <= this.C.length)) throw new Error(\"ins: invalid position\");\n            var _ins = function _ins(node) {\n                if (!_this3.ctx.isA(node)) throw new Error(\"ins: invalid AST node argument\");\n                _this3.C.splice(pos++, 0, node);\n                node.P = _this3;\n            };\n            args.forEach(function (arg) {\n                if ((typeof arg === \"undefined\" ? \"undefined\" : _typeof(arg)) === \"object\" && arg instanceof Array) arg.forEach(function (arg) {\n                    _ins(arg);\n                });else if (arg !== null) _ins(arg);\n            });\n            return this;\n        }\n\n        /*  add child AST node(s)  */\n\n    }, {\n        key: \"add\",\n        value: function add() {\n            var _this4 = this;\n\n            for (var _len4 = arguments.length, args = Array(_len4), _key4 = 0; _key4 < _len4; _key4++) {\n                args[_key4] = arguments[_key4];\n            }\n\n            if (args.length === 0) throw new Error(\"add: invalid number of arguments\");\n            var _add = function _add(node) {\n                if (!_this4.ctx.isA(node)) throw new Error(\"add: invalid AST node argument\");\n                _this4.C.push(node);\n                node.P = _this4;\n            };\n            args.forEach(function (arg) {\n                if ((typeof arg === \"undefined\" ? \"undefined\" : _typeof(arg)) === \"object\" && arg instanceof Array) arg.forEach(function (arg) {\n                    _add(arg);\n                });else if (arg !== null) _add(arg);\n            });\n            return this;\n        }\n\n        /*  delete child AST node(s)  */\n\n    }, {\n        key: \"del\",\n        value: function del() {\n            var _this5 = this;\n\n            for (var _len5 = arguments.length, args = Array(_len5), _key5 = 0; _key5 < _len5; _key5++) {\n                args[_key5] = arguments[_key5];\n            }\n\n            if (args.length === 0) throw new Error(\"del: invalid number of argument\");\n            args.forEach(function (node) {\n                if (!_this5.ctx.isA(node)) throw new Error(\"del: invalid AST node argument\");\n                var found = false;\n                for (var j = 0; j < _this5.C.length; j++) {\n                    if (_this5.C[j] === node) {\n                        _this5.C.splice(j, 1);\n                        node.P = null;\n                        found = true;\n                        break;\n                    }\n                }\n                if (!found) throw new Error(\"del: AST node not found in childs\");\n            });\n            return this;\n        }\n\n        /*  get child AST nodes  */\n\n    }, {\n        key: \"childs\",\n        value: function childs() {\n            return this.C;\n        }\n\n        /*  get parent AST node  */\n\n    }, {\n        key: \"parent\",\n        value: function parent() {\n            return this.P;\n        }\n\n        /*  serialize AST node recursively  */\n\n    }, {\n        key: \"serialize\",\n        value: function serialize() {\n            return this.ctx.serialize(this.ctx, this);\n        }\n    }]);\n\n    return ASTYBase;\n}();\n\nexports.default = ASTYBase;\n\n},{}],2:[function(_dereq_,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2016 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nvar ASTYDump = function () {\n    function ASTYDump() {\n        _classCallCheck(this, ASTYDump);\n    }\n\n    _createClass(ASTYDump, [{\n        key: \"dump\",\n\n        /*  dump the AST recursively  */\n        value: function dump(maxDepth) {\n            if (maxDepth === undefined) maxDepth = Infinity;\n            var out = \"\";\n            this.walk(function (node, depth /*, parent, when */) {\n                if (depth > maxDepth) return;\n                for (var i = 0; i < depth; i++) {\n                    out += \"    \";\n                }out += node.T + \" \";\n                var keys = Object.keys(node.A);\n                if (keys.length > 0) {\n                    (function () {\n                        out += \"(\";\n                        var first = true;\n                        keys.forEach(function (key) {\n                            if (!first) out += \", \";else first = false;\n                            out += key + \": \";\n                            var value = node.A[key];\n\n                            (function () {\n                                switch (typeof value === \"undefined\" ? \"undefined\" : _typeof(value)) {\n                                    case \"boolean\":\n                                    case \"number\":\n                                        out += value.toString();\n                                        break;\n                                    case \"string\":\n                                        var hex = function hex(ch) {\n                                            return ch.charCodeAt(0).toString(16).toUpperCase();\n                                        };\n                                        out += \"\\\"\" + value.replace(/\\\\/g, \"\\\\\\\\\").replace(/\"/g, \"\\\\\\\"\").replace(/\\x08/g, \"\\\\b\").replace(/\\t/g, \"\\\\t\").replace(/\\n/g, \"\\\\n\").replace(/\\f/g, \"\\\\f\").replace(/\\r/g, \"\\\\r\").replace(/[\\x00-\\x07\\x0B\\x0E\\x0F]/g, function (ch) {\n                                            return \"\\\\x0\" + hex(ch);\n                                        }).replace(/[\\x10-\\x1F\\x80-\\xFF]/g, function (ch) {\n                                            return \"\\\\x\" + hex(ch);\n                                        }).replace(/[\\u0100-\\u0FFF]/g, function (ch) {\n                                            return \"\\\\u0\" + hex(ch);\n                                        }).replace(/[\\u1000-\\uFFFF]/g, function (ch) {\n                                            return \"\\\\u\" + hex(ch);\n                                        }) + \"\\\"\";\n                                        break;\n                                    case \"object\":\n                                        if (value instanceof RegExp) out += value.source;else out += JSON.stringify(value);\n                                        break;\n                                    default:\n                                        out += JSON.stringify(value);\n                                        break;\n                                }\n                            })();\n                        });\n                        out += \") \";\n                    })();\n                }\n                out += \"[\" + node.L.L + \"/\" + node.L.C + \"]\\n\";\n            }, \"downward\");\n            return out;\n        }\n    }]);\n\n    return ASTYDump;\n}();\n\nexports.default = ASTYDump;\n\n},{}],3:[function(_dereq_,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2016 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nvar ASTYMerge = function () {\n    function ASTYMerge() {\n        _classCallCheck(this, ASTYMerge);\n    }\n\n    _createClass(ASTYMerge, [{\n        key: \"merge\",\n\n        /*  merge attributes and childs of an AST node  */\n        value: function merge(node) {\n            var _this = this;\n\n            var takePos = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n            var attrMap = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n            if (!this.ctx.isA(node)) throw new Error(\"merge: invalid AST node argument\");\n            if (takePos) {\n                var pos = node.pos();\n                this.pos(pos.L, pos.C, pos.O);\n            }\n            node.attrs().forEach(function (attrSource) {\n                var attrTarget = typeof attrMap[attrSource] !== \"undefined\" ? attrMap[attrSource] : attrSource;\n                if (attrTarget !== null) _this.set(attrTarget, node.get(attrSource));\n            });\n            node.childs().forEach(function (child) {\n                _this.add(child);\n            });\n            return this;\n        }\n    }]);\n\n    return ASTYMerge;\n}();\n\nexports.default = ASTYMerge;\n\n},{}],4:[function(_dereq_,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2016 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nvar ASTYSerialize = function () {\n    function ASTYSerialize() {\n        _classCallCheck(this, ASTYSerialize);\n    }\n\n    _createClass(ASTYSerialize, null, [{\n        key: \"serialize\",\n\n        /*  recursively serialize AST nodes into JSON string  */\n        value: function serialize(asty, node) {\n            var serializeNode = function serializeNode(node) {\n                var clone = {\n                    T: node.T,\n                    L: { L: node.L.L, C: node.L.C, O: node.L.O }\n                };\n                var keys = Object.keys(node.A);\n                if (keys.length > 0) {\n                    clone.A = {};\n                    keys.forEach(function (key) {\n                        var value = node.A[key];\n                        switch (typeof value === \"undefined\" ? \"undefined\" : _typeof(value)) {\n                            case \"boolean\":\n                            case \"number\":\n                            case \"string\":\n                                clone.A[key] = value;\n                                break;\n                            default:\n                                /*  use the slow approach only for non-atomic attributes  */\n                                clone.A[key] = JSON.parse(JSON.stringify(value));\n                                break;\n                        }\n                    });\n                }\n                if (node.C.length > 0) clone.C = node.C.map(function (C) {\n                    return serializeNode(C);\n                });\n                return clone;\n            };\n            if (!asty.isA(node)) throw new Error(\"serialize: not an ASTy node\");\n            return JSON.stringify({ ASTy: serializeNode(node) });\n        }\n\n        /*  recursively unserialize JSON string into AST nodes  */\n\n    }, {\n        key: \"unserialize\",\n        value: function unserialize(asty, json) {\n            var unserializeNode = function unserializeNode(clone) {\n                var node = asty.create(clone.T);\n                node.pos(clone.L.L, clone.L.C, clone.L.O);\n                if (_typeof(clone.A) === \"object\") {\n                    Object.keys(clone.A).forEach(function (key) {\n                        var value = clone.A[key];\n                        switch (typeof value === \"undefined\" ? \"undefined\" : _typeof(value)) {\n                            case \"boolean\":\n                            case \"number\":\n                            case \"string\":\n                                node.set(key, value);\n                                break;\n                            default:\n                                /*  use the slow approach only for non-atomic attributes  */\n                                node.set(key, JSON.parse(JSON.stringify(value)));\n                                break;\n                        }\n                    });\n                }\n                if (_typeof(clone.C) === \"object\" && clone.C instanceof Array) node.add(clone.C.map(function (C) {\n                    return unserializeNode(C);\n                }));\n                return node;\n            };\n            var obj = JSON.parse(json);\n            if ((typeof obj === \"undefined\" ? \"undefined\" : _typeof(obj)) !== \"object\" || _typeof(obj.ASTy) !== \"object\") throw new Error(\"unserialize: not an ASTy JSON export\");\n            return unserializeNode(obj.ASTy);\n        }\n    }]);\n\n    return ASTYSerialize;\n}();\n\nexports.default = ASTYSerialize;\n\n},{}],5:[function(_dereq_,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2016 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/* global 1: false */\n/* global 4: false */\n/* global 8: false */\n/* global 20161120:  false */\n\nvar version = {\n    major: 1,\n    minor: 4,\n    micro: 8,\n    date: 20161120\n};\n\nexports.default = version;\n\n},{}],6:[function(_dereq_,module,exports){\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n    value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/*\n**  ASTy -- Abstract Syntax Tree (AST) Data Structure\n**  Copyright (c) 2014-2016 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nvar ASTYWalk = function () {\n    function ASTYWalk() {\n        _classCallCheck(this, ASTYWalk);\n    }\n\n    _createClass(ASTYWalk, [{\n        key: \"walk\",\n\n        /*  walk the AST recursively  */\n        value: function walk(cb) {\n            var when = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \"downward\";\n\n            var _walk = function _walk(node, depth, parent) {\n                if (when === \"downward\" || when === \"both\") cb.call(null, node, depth, parent, \"downward\");\n                node.C.forEach(function (child) {\n                    _walk(child, depth + 1, node);\n                });\n                if (when === \"upward\" || when === \"both\") cb.call(null, node, depth, parent, \"upward\");\n            };\n            _walk(this, 0, null);\n            return this;\n        }\n    }]);\n\n    return ASTYWalk;\n}();\n\nexports.default = ASTYWalk;\n\n},{}],7:[function(_dereq_,module,exports){\n\"use strict\";\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }(); /*\ny -- Abstract Syntax Tree (AST) Data Structure\nopyright (c) 2014-2016 Ralf S. Engelschall <rse@engelschall.com>\nn                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     **  Permission is hereby granted, free of charge, to any person obtaining\n                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     **  a copy of this software and associated documentation files (the\noftware\"), to deal in the Software without restriction, including\nwithout limitation the rights to use, copy, modify, merge, publish,\ndistribute, sublicense, and/or sell copies of the Software, and to\npermit persons to whom the Software is furnished to do so, subject to\nthe following conditions:\nnhe above copyright notice and this permission notice shall be included\nin all copies or substantial portions of the Software.\nnnnn                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                     **  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\nnnnn\nvar _astyBase = _dereq_(\"./asty-base.js\");\n\nvar _astyBase2 = _interopRequireDefault(_astyBase);\n\nvar _astyMerge = _dereq_(\"./asty-merge.js\");\n\nvar _astyMerge2 = _interopRequireDefault(_astyMerge);\n\nvar _astyWalk = _dereq_(\"./asty-walk.js\");\n\nvar _astyWalk2 = _interopRequireDefault(_astyWalk);\n\nvar _astyDump = _dereq_(\"./asty-dump.js\");\n\nvar _astyDump2 = _interopRequireDefault(_astyDump);\n\nvar _astySerialize = _dereq_(\"./asty-serialize.js\");\n\nvar _astySerialize2 = _interopRequireDefault(_astySerialize);\n\nvar _astyVersion = _dereq_(\"./asty-version.js\");\n\nvar _astyVersion2 = _interopRequireDefault(_astyVersion);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar ASTYCtx = function () {\n    function ASTYCtx() {\n        var _this = this;\n\n        _classCallCheck(this, ASTYCtx);\n\n        this.ASTYNode = function () {};\n        var mixins = [[_astyBase2.default, \"init\", \"type\", \"pos\", \"set\", \"unset\", \"get\", \"attrs\", \"nth\", \"ins\", \"add\", \"del\", \"childs\", \"parent\", \"serialize\"], [_astyMerge2.default, \"merge\"], [_astyWalk2.default, \"walk\"], [_astyDump2.default, \"dump\"]];\n        mixins.forEach(function (mixin) {\n            var proto = mixin[0].prototype;\n            mixin.slice(1).forEach(function (method) {\n                _this.ASTYNode.prototype[method] = proto[method];\n            });\n        });\n        return this;\n    }\n\n    _createClass(ASTYCtx, [{\n        key: \"version\",\n        value: function version() {\n            return _astyVersion2.default;\n        }\n    }, {\n        key: \"extend\",\n        value: function extend(mixin) {\n            for (var method in mixin) {\n                if (mixin.hasOwnProperty(method)) this.ASTYNode.prototype[method] = mixin[method];\n            }return this;\n        }\n    }, {\n        key: \"create\",\n        value: function create(type) {\n            return new this.ASTYNode().init(this, type);\n        }\n    }, {\n        key: \"isA\",\n        value: function isA(node) {\n            return (typeof node === \"undefined\" ? \"undefined\" : _typeof(node)) === \"object\" && node instanceof this.ASTYNode && typeof node.ASTy === \"boolean\" && node.ASTy === true;\n        }\n    }, {\n        key: \"serialize\",\n        value: function serialize(node) {\n            return _astySerialize2.default.serialize(this, node);\n        }\n    }, {\n        key: \"unserialize\",\n        value: function unserialize(json) {\n            return _astySerialize2.default.unserialize(this, json);\n        }\n    }]);\n\n    return ASTYCtx;\n}();\n\n/*  export the traditional way for interoperability reasons\n    (as Babel would export an object with a 'default' field)  */\n\n\nmodule.exports = ASTYCtx;\n\n},{\"./asty-base.js\":1,\"./asty-dump.js\":2,\"./asty-merge.js\":3,\"./asty-serialize.js\":4,\"./asty-version.js\":5,\"./asty-walk.js\":6}]},{},[1,2,3,4,5,6,7])(7)\n});","/*\n**  Cache-LRU -- In-Memory Cache with O(1) Operations and LRU Purging Strategy\n**  Copyright (c) 2015-2016 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.CacheLRU = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\n\"use strict\";function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}var _createClass=function(){function e(e,t){for(var i=0;i<t.length;i++){var n=t[i];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(t,i,n){return i&&e(t.prototype,i),n&&e(t,n),t}}(),CacheLRU=function(){function e(){return _classCallCheck(this,e),this._index={},this._LRU={newer:null},this._MRU={older:null},this._LRU.newer=this._MRU,this._MRU.older=this._LRU,this._cur=0,this._max=1/0,this._dispose=function(){},this}return _createClass(e,[{key:\"limit\",value:function(e){var t=this._max;return arguments.length>0&&(this._max=e,this._purge()),t}},{key:\"dispose\",value:function(e){return this._dispose=e,this}},{key:\"length\",value:function(){return this._cur}},{key:\"keys\",value:function(){return this.each(function(e,t){this.push(t)},[])}},{key:\"values\",value:function(){return this.each(function(e){this.push(e)},[])}},{key:\"each\",value:function(e,t){arguments<2&&(t=this);for(var i=0,n=this._MRU.older;n!==this._LRU;)e.call(t,n.val,n.key,i++),n=n.older;return t}},{key:\"has\",value:function(e){var t=this._index[e];return void 0!==t}},{key:\"peek\",value:function(e){var t=this._index[e];if(void 0!==t)return t.expires<Date.now()?void this.del(t.key):t.val}},{key:\"touch\",value:function(e){var t=this._index[e];if(void 0===t)throw new Error(\"touch: no such item\");return this._promote(t),this}},{key:\"get\",value:function(e){var t=this._index[e];if(void 0!==t)return t.expires<Date.now()?void this.del(t.key):(this._promote(t),t.val)}},{key:\"set\",value:function(e,t,i){arguments.length<3&&(i=1/0),i+=Date.now();var n=this._index[e];if(void 0===n)n={older:null,newer:null,key:e,val:t,expires:i},this._index[e]=n,this._attach(n),this._cur++,this._purge();else{var r=n.val;n.val=t,this._promote(n),this._dispose.call(void 0,n.key,r,\"set\")}return this}},{key:\"del\",value:function(e){var t=this._index[e];if(void 0===t)throw new Error(\"del: no such item\");return delete this._index[e],this._detach(t),this._cur--,this._dispose.call(void 0,e,t.val,\"del\"),this}},{key:\"clear\",value:function(){for(;this._cur>0;)this.del(this._LRU.newer.key);return this}},{key:\"_purge\",value:function(){for(;this._cur>this._max;)this.del(this._LRU.newer.key)}},{key:\"_promote\",value:function(e){this._detach(e),this._attach(e)}},{key:\"_detach\",value:function(e){e.older.newer=e.newer,e.newer.older=e.older,e.older=null,e.newer=null}},{key:\"_attach\",value:function(e){e.older=this._MRU.older,e.newer=this._MRU,e.newer.older=e,e.older.newer=e}}]),e}();module.exports=CacheLRU;\n},{}]},{},[1])(1)\n});\n\n\n//# sourceMappingURL=bundle.map","/*\n**  pegjs-util -- Utility Class for PEG.js\n**  Copyright (c) 2014-2016 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/*  Universal Module Definition (UMD) for Library  */\n(function (root, name, factory) {\n    /* global define: false */\n    /* global module: false */\n    if (typeof define === \"function\" && typeof define.amd !== \"undefined\")\n        /*  AMD environment  */\n        define(name, function () { return factory(root); });\n    else if (typeof module === \"object\" && typeof module.exports === \"object\")\n        /*  CommonJS environment  */\n        module.exports = factory(root);\n    else\n        /*  Browser environment  */\n        root[name] = factory(root);\n}(/* global global: false */\n  (typeof global !== \"undefined\" ? global :\n  /* global window: false */\n  (typeof window !== \"undefined\" ? window : this)), \"PEGUtil\", function (/* root */) {\n\n    var PEGUtil = {};\n\n    /*  helper function for generating a function to generate an AST node  */\n    PEGUtil.makeAST = function makeAST (location, options) {\n        return function () {\n            return options.util.__makeAST.call(\n                null,\n                location().start.line,\n                location().start.column,\n                location().start.offset,\n                arguments\n            );\n        };\n    };\n\n    /*  helper function for generating a function to unroll the parse stack  */\n    PEGUtil.makeUnroll = function (location, options) {\n        return function (first, list, take) {\n            if (   typeof list !== \"object\"\n                || !(list instanceof Array))\n                throw new options.util.__SyntaxError(\"unroll: invalid list argument for unrolling\",\n                    (typeof list), \"Array\", location());\n            if (typeof take !== \"undefined\") {\n                if (typeof take === \"number\")\n                    take = [ take ];\n                var result = [];\n                if (first !== null)\n                    result.push(first);\n                for (var i = 0; i < list.length; i++) {\n                    for (var j = 0; j < take.length; j++)\n                        result.push(list[i][take[j]]);\n                }\n                return result;\n            }\n            else {\n                if (first !== null)\n                    list.unshift(first);\n                return list;\n            }\n        };\n    };\n\n    /*  utility function: create a source excerpt  */\n    var excerpt = function (txt, o) {\n        var l = txt.length;\n        var b = o - 20; if (b < 0) b = 0;\n        var e = o + 20; if (e > l) e = l;\n        var hex = function (ch) {\n            return ch.charCodeAt(0).toString(16).toUpperCase();\n        };\n        var extract = function (txt, pos, len) {\n            return txt.substr(pos, len)\n                .replace(/\\\\/g,   \"\\\\\\\\\")\n                .replace(/\\x08/g, \"\\\\b\")\n                .replace(/\\t/g,   \"\\\\t\")\n                .replace(/\\n/g,   \"\\\\n\")\n                .replace(/\\f/g,   \"\\\\f\")\n                .replace(/\\r/g,   \"\\\\r\")\n                .replace(/[\\x00-\\x07\\x0B\\x0E\\x0F]/g, function(ch) { return \"\\\\x0\" + hex(ch); })\n                .replace(/[\\x10-\\x1F\\x80-\\xFF]/g,    function(ch) { return \"\\\\x\"  + hex(ch); })\n                .replace(/[\\u0100-\\u0FFF]/g,         function(ch) { return \"\\\\u0\" + hex(ch); })\n                .replace(/[\\u1000-\\uFFFF]/g,         function(ch) { return \"\\\\u\"  + hex(ch); });\n        };\n        return {\n            prolog: extract(txt, b, o - b),\n            token:  extract(txt, o, 1),\n            epilog: extract(txt, o + 1, e - (o + 1))\n        };\n    };\n\n    /*  provide top-level parsing functionality  */\n    PEGUtil.parse = function (parser, txt, options) {\n        if (typeof parser !== \"object\")\n            throw new Error(\"invalid parser object (not an object)\");\n        if (typeof parser.parse !== \"function\")\n            throw new Error(\"invalid parser object (no \\\"parse\\\" function)\");\n        if (typeof txt !== \"string\")\n            throw new Error(\"invalid input text (not a string)\");\n        if (typeof options !== \"undefined\" && typeof options !== \"object\")\n            throw new Error(\"invalid options (not an object)\");\n        if (typeof options === \"undefined\")\n            options = {};\n        var result = { ast: null, error: null };\n        try {\n            var makeAST;\n            if (typeof options.makeAST === \"function\")\n                makeAST = options.makeAST;\n            else {\n                makeAST = function (location, args) {\n                    return {\n                        line:   location().start.line,\n                        column: location().start.column,\n                        offset: location().start.offset,\n                        args:   args\n                    };\n                };\n            }\n            options.util = {\n                makeUnroll:    PEGUtil.makeUnroll,\n                makeAST:       PEGUtil.makeAST,\n                __makeAST:     makeAST,\n                __SyntaxError: parser.SyntaxError\n            };\n            result.ast = parser.parse(txt, options);\n            result.error = null;\n        }\n        catch (e) {\n            result.ast = null;\n            if (e instanceof parser.SyntaxError) {\n                var definedOrElse = function (value, fallback) {\n                    return (typeof value !== \"undefined\" ? value : fallback);\n                };\n                result.error = {\n                    line:     definedOrElse(e.location.start.line, 0),\n                    column:   definedOrElse(e.location.start.column, 0),\n                    message:  e.message,\n                    found:    definedOrElse(e.found, \"\"),\n                    expected: definedOrElse(e.expected, \"\"),\n                    location: excerpt(txt, definedOrElse(e.location.start.offset, 0))\n                };\n            }\n            else {\n                result.error = {\n                    line:     0,\n                    column:   0,\n                    message:  e.message,\n                    found:    \"\",\n                    expected: \"\",\n                    location: excerpt(\"\", 0)\n                };\n            }\n        }\n        return result;\n    };\n\n    /*  render a useful error message  */\n    PEGUtil.errorMessage = function (e, noFinalNewline) {\n        var l = e.location;\n        var prefix1 = \"line \" + e.line + \" (column \" + e.column + \"): \";\n        var prefix2 = \"\";\n        for (var i = 0; i < prefix1.length + l.prolog.length; i++)\n            prefix2 += \"-\";\n        var msg = prefix1 + l.prolog + l.token + l.epilog + \"\\n\" +\n            prefix2 + \"^\" + \"\\n\" +\n            e.message + (noFinalNewline ? \"\" : \"\\n\");\n        return msg;\n    };\n\n    return PEGUtil;\n}));\n\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2016 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nexport default class ASTQAdapterASTY {\n    static taste (node) {\n        return (\n               typeof node === \"object\"\n            && node !== null\n            && typeof node.ASTy === \"boolean\"\n        )\n    }\n    static getParentNode (node /*, type */) {\n        return node.parent()\n    }\n    static getChildNodes (node /*, type */) {\n        return node.childs()\n    }\n    static getNodeType (node) {\n        return node.type()\n    }\n    static getNodeAttrNames (node) {\n        return node.attrs()\n    }\n    static getNodeAttrValue (node, attr) {\n        return node.get(attr)\n    }\n}\n\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2016 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/*  See also: https://developer.mozilla.org/en-US/docs/Mozilla/Projects/SpiderMonkey/Parser_API  */\n\nexport default class ASTQAdapterMozAST {\n    static taste (node) {\n        return (\n               typeof node === \"object\"\n            && node !== null\n            && typeof node.type === \"string\"\n            && node.type !== \"\"\n        )\n    }\n    static getParentNode (node, type) {\n        if (type !== \"*\" && type !== \"parent\")\n            throw new Error(\"no such axis named \\\"\" + type + \"\\\" for walking to parent nodes\")\n        if (typeof node.parent !== \"undefined\")\n            return node.parent\n        else\n            throw new Error(\"Your Mozilla SpiderMonkey AST does not support parent node traversal\")\n    }\n    static getChildNodes (node, type) {\n        let childs = []\n        let checkField = (node, field) => {\n            if (   node.hasOwnProperty(field)\n                && this.taste(node[field]))\n                childs.push(node[field])\n            else if (   node.hasOwnProperty(field)\n                     && typeof node[field] === \"object\"\n                     && node[field] instanceof Array) {\n                node[field].forEach((node) => {\n                    if (this.taste(node))\n                       childs.push(node)\n                })\n            }\n        }\n        if (type === \"*\") {\n            for (let field in node)\n                checkField(node, field)\n        }\n        else {\n            if (typeof node[type] === \"undefined\")\n                throw new Error(\"no such axis named \\\"\" + type + \"\\\" for walking to child nodes\")\n            checkField(node, type)\n        }\n        return childs\n    }\n    static getNodeType (node) {\n        return node.type\n    }\n    static getNodeAttrNames (node) {\n        let names = []\n        for (let field in node)\n            if (   node.hasOwnProperty(field)\n                && typeof node[field] !== \"object\"\n                && field !== \"type\"\n                && field !== \"loc\")\n                names.push(field)\n        return names\n    }\n    static getNodeAttrValue (node, attr) {\n        if (   node.hasOwnProperty(attr)\n            && typeof node[attr] !== \"object\"\n            && attr !== \"type\"\n            && attr !== \"loc\")\n            return node[attr]\n        else\n            return undefined\n    }\n}\n\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2016 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nexport default class ASTQAdapterParse5 {\n    static taste (node) {\n        /* global Node: true */\n        return (\n               typeof node === \"object\"\n            && node !== null\n            && !(   typeof Node === \"object\"\n                 && node instanceof Node    )\n            && typeof node.nodeName === \"string\"\n            && node.nodeName !== \"\"\n        )\n    }\n    static getParentNode (node /*, type */) {\n        return node.parentNode\n    }\n    static getChildNodes (node /*, type */) {\n        return (\n            (   typeof node.childNodes === \"object\"\n             && node.childNodes instanceof Array   ) ?\n            node.childNodes : []\n        )\n    }\n    static getNodeType (node) {\n        return node.nodeName\n    }\n    static getNodeAttrNames (node) {\n        let attrs = [ \"value\" ]\n        if (   typeof node.attrs === \"object\"\n            && node.attrs instanceof Array   )\n            attrs = attrs.concat(node.attrs.map((n) => n.name))\n        return attrs\n    }\n    static getNodeAttrValue (node, attr) {\n        let value\n        if (attr === \"value\")\n            value = node.value\n        else if (   typeof node.attrs === \"object\"\n                 && node.attrs instanceof Array   ) {\n            let values = node.attrs\n                .filter((n) => n.name === attr)\n                .map((n) => n.value)\n            if (values.length === 1)\n                value = values[0]\n        }\n        return value\n    }\n}\n\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2016 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nexport default class ASTQAdapterXMLDOM {\n    static taste (node) {\n        /* global Node: true */\n        return (\n               typeof Node === \"object\"\n            && node !== null\n            && node instanceof Node\n            && typeof node === \"object\"\n            && typeof node.nodeType === \"number\"\n            && typeof node.nodeName === \"string\"\n        )\n    }\n    static getParentNode (node /*, type */) {\n        return node.parentNode\n    }\n    static getChildNodes (node /*, type */) {\n        return typeof node.childNodes === \"object\" && node.childNodes !== null && node.hasChildNodes() ?\n            Array.prototype.slice.call(node.childNodes, 0) : []\n    }\n    static getNodeType (node) {\n        return typeof node.nodeName === \"string\" ?\n            node.nodeName : \"unknown\"\n    }\n    static getNodeAttrNames (node) {\n        return typeof node.attributes === \"object\" && node.attributes !== null && node.hasAttributes() ?\n            Array.prototype.slice.call(node.attributes, 0).map((n) => n.nodeName) : []\n    }\n    static getNodeAttrValue (node, attr) {\n        return typeof node.attributes === \"object\" && node.attributes !== null && node.hasAttributes() ?\n            node.getAttribute(attr) : undefined\n    }\n}\n\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2016 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nexport default class ASTQAdapter {\n    constructor () {\n        this._adapters = []\n        return this\n    }\n    register (adapter, force = false) {\n        this._adapters.unshift({ adapter: adapter, force: force })\n        return this\n    }\n    unregister (adapter) {\n        if (adapter === undefined)\n            this._adapters = []\n        else {\n            let adapters = []\n            for (let i = 0; i < this._adapters.length; i++)\n                if (this._adapters[i].adapter !== adapter)\n                    adapters.push(this._adapters[i])\n            this._adapters = adapters\n        }\n        return this\n    }\n    select (node) {\n        for (let i = 0; i < this._adapters.length; i++)\n            if (this._adapters[i].force || this._adapters[i].adapter.taste(node))\n                return this._adapters[i].adapter\n        return undefined\n    }\n}\n\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2016 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/*  internal helper function: find position between siblings  */\nconst pos = (A, T) => {\n    let parent = A.getParentNode(T, \"*\")\n    if (parent === null)\n        return 1\n    let pchilds = A.getChildNodes(parent, \"*\")\n    for (let i = 0; i < pchilds.length; i++)\n        if (pchilds[i] === T)\n            return (i + 1)\n    throw new Error(\"cannot find myself\")\n}\n\n/*  internal helper function: find parent nodes  */\nconst parents = (A, T) => {\n    let parents = []\n    while ((T = A.getParentNode(T, \"*\")) !== null)\n        parents.push(T)\n    return parents\n}\n\n/*  the exported standard functions  */\nconst stdfuncs = {\n    /*  type name of node  */\n    \"type\": (A, T) => {\n        return A.getNodeType(T)\n    },\n\n    /*  attribute names of node  */\n    \"attrs\": (A, T, sep) => {\n        if (sep === undefined)\n            sep = \" \"\n        /* eslint no-console: 0 */\n        return sep + A.getNodeAttrNames(T).join(sep) + sep\n    },\n\n    /*  depth of node in tree  */\n    \"depth\": (A, T) => {\n        let depth = 1\n        let node = T\n        while ((node = A.getParentNode(node, \"*\")) !== null)\n            depth++\n        return depth\n    },\n\n    /*  return position of node between siblings  */\n    \"pos\": (A, T) => {\n        return pos(A, T)\n    },\n\n    /*  check position of node between siblings  */\n    \"nth\": (A, T, num) => {\n        num = parseInt(num, 10)\n        let parent = A.getParentNode(T, \"*\")\n        if (parent !== null) {\n            let pchilds = A.getChildNodes(parent, \"*\")\n            if (num < 0)\n                num = pchilds.length - (num + 1)\n            for (let i = 0; i < pchilds.length; i++)\n                if (pchilds[i] === T)\n                    return ((i + 1) === num)\n            return false\n        }\n        else if (num === 1)\n            return true\n        else\n            return false\n    },\n\n    /*  check position of node to be first of siblings  */\n    \"first\": (A, T) => {\n        return stdfuncs.nth(A, T, 1)\n    },\n\n    /*  check position of node to be last of siblings  */\n    \"last\": (A, T) => {\n        return stdfuncs.nth(A, T, -1)\n    },\n\n    /*  count number of keys/elements/characters/etc  */\n    \"count\": (A, T, val) => {\n        if (typeof val === \"object\" && val instanceof Array)\n            return val.length\n        else if (typeof val === \"object\")\n            return Object.keys(val).length\n        else if (typeof val === \"string\")\n            return val.length\n        else\n            return String(val).length\n    },\n\n    /*  check whether node is below another  */\n    \"below\": (A, T, other) => {\n        if (!A.taste(other))\n            throw new Error(\"invalid argument to function \\\"below\\\" (node expected)\")\n        let node = T\n        while ((node = A.getParentNode(node, \"*\")) !== null)\n            if (node === other)\n                return true\n        return false\n    },\n\n    /*  check whether node follows another  */\n    \"follows\": (A, T, other) => {\n        if (!A.taste(other))\n            throw new Error(\"invalid argument to function \\\"follows\\\" (node expected)\")\n        if (T === other)\n            return false\n        let pathOfT     = [ T     ].concat(parents(A, T    )).reverse()\n        let pathOfOther = [ other ].concat(parents(A, other)).reverse()\n        let len = Math.min(pathOfT.length, pathOfOther.length)\n        let i\n        for (i = 0; i < len; i++)\n            if (pathOfT[i] !== pathOfOther[i])\n                break\n        if (i === 0)\n            throw new Error(\"internal error: root nodes have to be same same\")\n        else if (i === len) {\n            if (pathOfOther.length < pathOfT.length)\n                return true\n            else\n                return false\n        }\n        else\n            return pos(A, pathOfT[i]) > pos(A, pathOfOther[i])\n    },\n\n    /*  check whether node is in a list of nodes  */\n    \"in\": (A, T, val) => {\n        if (!(typeof val === \"object\" && val instanceof Array))\n            throw new Error(\"invalid argument to function \\\"in\\\" (array expected)\")\n        for (let i = 0; i < val.length; i++)\n            if (val[i] === T)\n                return true\n        return false\n    },\n\n    /*  retrieve a sub-string  */\n    \"substr\": (A, T, str, pos, len) => {\n        return String(str).substr(pos, len)\n    },\n\n    /*  retrieve index of a sub-string  */\n    \"index\": (A, T, str, sub, from) => {\n        return String(str).indexOf(sub, from)\n    },\n\n    /*  remove whitespaces at begin and end of string  */\n    \"trim\": (A, T, str) => {\n        return String(str).trim()\n    },\n\n    /*  convert string to lower-case  */\n    \"lc\": (A, T, str) => {\n        return String(str).toLowerCase()\n    },\n\n    /*  convert string to upper-case  */\n    \"uc\": (A, T, str) => {\n        return String(str).toUpperCase()\n    }\n}\n\nexport default stdfuncs\n\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2016 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nexport default class ASTQFuncs {\n    constructor () {\n        this._funcs = {}\n        return this\n    }\n    register (name, func) {\n        this._funcs[name] = func\n    }\n    run (name, args) {\n        let func = this._funcs[name]\n        if (typeof func !== \"function\")\n            throw new Error(\"invalid function \\\"\" + name + \"\\\"\")\n        return func.apply(null, args)\n    }\n}\n\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2016 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nimport util           from \"./astq-util.js\"\nimport ASTQQueryTrace from \"./astq-query-trace.js\"\n\nexport default class ASTQQueryExec extends ASTQQueryTrace {\n    constructor (adapter, params, funcs, trace) {\n        super()\n        this.adapter = adapter\n        this.params  = params\n        this.funcs   = funcs\n        this.trace   = trace\n    }\n\n    execQuery (Q, T) {\n        this.traceBegin(Q, T)\n        let output = []\n\n        /*  iterate over all query paths  */\n        Q.childs().forEach((Q) => {\n            output = output.concat(this.execPath(Q, T))\n        })\n\n        this.traceEnd(Q, T, output)\n        return output\n    }\n\n    execPath (Q, T) {\n        this.traceBegin(Q, T)\n        let nodes = [ T ]\n        let result = []\n        let resultExplicit = false\n\n        /*  iterate over all steps of a query path  */\n        Q.childs().forEach((Q) => {\n            let output = []\n            nodes.forEach((T) => {\n                output = output.concat(this.execStep(Q, T))\n            })\n            nodes = output\n            if (Q.get(\"isResult\")) {\n                resultExplicit = true\n                result = result.concat(nodes)\n            }\n        })\n\n        this.traceEnd(Q, T, nodes)\n        return (resultExplicit ? result : nodes)\n    }\n\n    execStep (Q, T) {\n        this.traceBegin(Q, T)\n\n        /*  determine (optional) axis, (mandatory) match and (optional) filter  */\n        let childs = Q.childs()\n        let axis   = null\n        let match  = null\n        let filter = null\n        let i = 0\n        if (i < childs.length && childs[i].type() === \"Axis\")\n            axis = childs[i++]\n        if (i < childs.length && childs[i].type() === \"Match\")\n            match = childs[i++]\n        if (i < childs.length && childs[i].type() === \"Filter\")\n            filter = childs[i++]\n        if (match === null)\n            throw new Error(\"no matching part in query step\")\n\n        let nodes = []\n\n        /*  helper function for matching and taking node  */\n        let id = match.get(\"id\")\n        let matchAndTake = (T) => {\n            let type = this.adapter.getNodeType(T)\n            if (id === \"*\" || id === type) {\n                let take = true\n                if (filter !== null)\n                    if (!this.execFilter(filter, T))\n                        take = false\n                if (take)\n                    nodes.push(T)\n            }\n        }\n\n        /*  determine nodes along axis which potentially might match  */\n        if (axis !== null) {\n            let op = axis.get(\"op\")\n            let t = axis.get(\"type\")\n            if (op === \"/\") {\n                /*  direct child nodes  */\n                this.adapter.getChildNodes(T, t).forEach((T) => matchAndTake(T))\n            }\n            else if (op === \"//\") {\n                /*  transitive child nodes  */\n                let walk = (T) => {\n                    matchAndTake(T)\n                    this.adapter.getChildNodes(T, t).forEach((T) => walk(T)) /* RECURSION */\n                }\n                this.adapter.getChildNodes(T, t).forEach((T) => walk(T))\n            }\n            else if (op === \"-/\") {\n                /*  direct left sibling  */\n                let parent = this.adapter.getParentNode(T, \"*\")\n                if (parent !== null) {\n                    let pchilds = this.adapter.getChildNodes(parent, t)\n                    let leftSibling = null\n                    for (let i = 0; i < pchilds.length; i++) {\n                        if (pchilds[i] === T)\n                            break\n                        leftSibling = pchilds[i]\n                    }\n                    if (leftSibling !== null)\n                        matchAndTake(leftSibling)\n                }\n            }\n            else if (op === \"-//\") {\n                /*  transitive left siblings  */\n                let parent = this.adapter.getParentNode(T, \"*\")\n                if (parent !== null) {\n                    let pchilds = this.adapter.getChildNodes(parent, t)\n                    let i = 0\n                    for (; i < pchilds.length; i++)\n                        if (pchilds[i] === T)\n                            break\n                    for (i--; i >= 0; i--)\n                        matchAndTake(pchilds[i])\n                }\n            }\n            else if (op === \"+/\") {\n                /*  direct right sibling  */\n                let parent = this.adapter.getParentNode(T, \"*\")\n                if (parent !== null) {\n                    let pchilds = this.adapter.getChildNodes(parent, t)\n                    let i\n                    for (i = 0; i < pchilds.length; i++)\n                        if (pchilds[i] === T)\n                            break\n                    if (i < pchilds.length)\n                        matchAndTake(pchilds[++i])\n                }\n            }\n            else if (op === \"+//\") {\n                /*  transitive right siblings  */\n                let parent = this.adapter.getParentNode(T, \"*\")\n                if (parent !== null) {\n                    let pchilds = this.adapter.getChildNodes(parent, t)\n                    let i\n                    for (i = 0; i < pchilds.length; i++)\n                        if (pchilds[i] === T)\n                            break\n                    if (i < pchilds.length)\n                        for (i++; i < pchilds.length; i++)\n                            matchAndTake(pchilds[i])\n                }\n            }\n            else if (op === \"../\") {\n                /*  direct parent  */\n                let parent = this.adapter.getParentNode(T, t)\n                if (parent !== null)\n                    matchAndTake(parent)\n            }\n            else if (op === \"..//\") {\n                /*  transitive parents  */\n                let node = T\n                for (;;) {\n                    let parent = this.adapter.getParentNode(node, t)\n                    if (parent === null)\n                        break\n                    matchAndTake(parent)\n                    node = parent\n                }\n            }\n            else if (op === \"<//\") {\n                /*  transitive preceding nodes  */\n                let ctx = { sentinel: T, take: true }\n                for (;;) {\n                    let parent = this.adapter.getParentNode(T, \"*\")\n                    if (parent === null)\n                        break\n                    T = parent\n                }\n                let walk = (T) => {\n                    if (T === ctx.sentinel)\n                        ctx.take = false\n                    if (ctx.take)\n                        matchAndTake(T)\n                    if (ctx.take)\n                        this.adapter.getChildNodes(T, t).forEach((T) => walk(T)) /* RECURSION */\n                }\n                if (T !== ctx.sentinel) {\n                    matchAndTake(T)\n                    this.adapter.getChildNodes(T, t).forEach((T) => walk(T))\n                }\n                nodes = nodes.reverse()\n            }\n            else if (op === \">//\") {\n                /*  transitive following nodes  */\n                let ctx = { sentinel: T, take: false }\n                for (;;) {\n                    let parent = this.adapter.getParentNode(T, \"*\")\n                    if (parent === null)\n                        break\n                    T = parent\n                }\n                let walk = (T) => {\n                    if (ctx.take)\n                        matchAndTake(T)\n                    if (T === ctx.sentinel)\n                        ctx.take = true\n                    this.adapter.getChildNodes(T, t).forEach((T) => walk(T)) /* RECURSION */\n                }\n                this.adapter.getChildNodes(T, t).forEach((T) => walk(T))\n            }\n        }\n        else\n            /*  current node  */\n            matchAndTake(T)\n\n        this.traceEnd(Q, T, nodes)\n        return nodes\n    }\n\n    execFilter (Q, T) {\n        this.traceBegin(Q, T)\n        let expr = Q.childs()[0]\n        let result = this.execExpr(expr, T)\n        result = util.truthy(result)\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExpr (Q, T) {\n        switch (Q.type()) {\n            case \"ConditionalBinary\":  return this.execExprConditionalBinary(Q, T)\n            case \"ConditionalTernary\": return this.execExprConditionalTernary(Q, T)\n            case \"Logical\":            return this.execExprLogical(Q, T)\n            case \"Bitwise\":            return this.execExprBitwise(Q, T)\n            case \"Relational\":         return this.execExprRelational(Q, T)\n            case \"Arithmetical\":       return this.execExprArithmetical(Q, T)\n            case \"Unary\":              return this.execExprUnary(Q, T)\n            case \"FuncCall\":           return this.execExprFuncCall(Q, T)\n            case \"Attribute\":          return this.execExprAttribute(Q, T)\n            case \"Param\":              return this.execExprParam(Q, T)\n            case \"LiteralString\":      return this.execExprLiteralString(Q, T)\n            case \"LiteralRegExp\":      return this.execExprLiteralRegExp(Q, T)\n            case \"LiteralNumber\":      return this.execExprLiteralNumber(Q, T)\n            case \"LiteralValue\":       return this.execExprLiteralValue(Q, T)\n            case \"Path\":               return this.execExprPath(Q, T)\n        }\n    }\n\n    execExprConditionalBinary (Q, T) {\n        this.traceBegin(Q, T)\n        let result = this.execExpr(Q.childs()[0], T)\n        if (!util.truthy(result))\n            result = this.execExpr(Q.childs()[1], T)\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprConditionalTernary (Q, T) {\n        this.traceBegin(Q, T)\n        let result = this.execExpr(Q.childs()[0], T)\n        if (util.truthy(result))\n            result = this.execExpr(Q.childs()[1], T)\n        else\n            result = this.execExpr(Q.childs()[2], T)\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprLogical (Q, T) {\n        this.traceBegin(Q, T)\n        let result = false\n        switch (Q.get(\"op\")) {\n            case \"&&\":\n                result = util.truthy(this.execExpr(Q.childs()[0], T))\n                if (result)\n                    result = result && util.truthy(this.execExpr(Q.childs()[1], T))\n                break\n            case \"||\":\n                result = util.truthy(this.execExpr(Q.childs()[0], T))\n                if (!result)\n                    result = result || util.truthy(this.execExpr(Q.childs()[1], T))\n                break\n        }\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprBitwise (Q, T) {\n        this.traceBegin(Q, T)\n        let v1 = util.coerce(this.execExpr(Q.childs()[0], T), \"number\")\n        let v2 = util.coerce(this.execExpr(Q.childs()[1], T), \"number\")\n        let result\n        switch (Q.get(\"op\")) {\n            case \"&\":  result = v1 &  v2; break\n            case \"|\":  result = v1 |  v2; break\n            case \"<<\": result = v1 << v2; break\n            case \">>\": result = v1 >> v2; break\n        }\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprRelational (Q, T) {\n        this.traceBegin(Q, T)\n        let v1 = this.execExpr(Q.childs()[0], T)\n        let v2 = this.execExpr(Q.childs()[1], T)\n        let result\n        switch (Q.get(\"op\")) {\n            case \"==\": result = v1 === v2; break\n            case \"!=\": result = v1 !== v2; break\n            case \"<=\": result = util.coerce(v1, \"number\") <= util.coerce(v2, \"number\"); break\n            case \">=\": result = util.coerce(v1, \"number\") >= util.coerce(v2, \"number\"); break\n            case \"<\":  result = util.coerce(v1, \"number\") <  util.coerce(v2, \"number\"); break\n            case \">\":  result = util.coerce(v1, \"number\") >  util.coerce(v2, \"number\"); break\n            case \"=~\": result = util.coerce(v1, \"string\").match(util.coerce(v2, \"regexp\")) !== null; break\n            case \"!~\": result = util.coerce(v1, \"string\").match(util.coerce(v2, \"regexp\")) === null; break\n        }\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprArithmetical (Q, T) {\n        this.traceBegin(Q, T)\n        let v1 = this.execExpr(Q.childs()[0], T)\n        let v2 = this.execExpr(Q.childs()[1], T)\n        let result\n        switch (Q.get(\"op\")) {\n            case \"+\":\n                if (typeof v1 === \"string\")\n                    result = v1 + util.coerce(v2, \"string\")\n                else\n                    result = util.coerce(v1, \"number\") + util.coerce(v2, \"number\")\n                break\n            case \"-\":  result = util.coerce(v1, \"number\") + util.coerce(v2, \"number\"); break\n            case \"*\":  result = util.coerce(v1, \"number\") * util.coerce(v2, \"number\"); break\n            case \"/\":  result = util.coerce(v1, \"number\") / util.coerce(v2, \"number\"); break\n            case \"%\":  result = util.coerce(v1, \"number\") % util.coerce(v2, \"number\"); break\n            case \"**\": result = Math.pow(util.coerce(v1, \"number\"), util.coerce(v2, \"number\")); break\n        }\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprUnary (Q, T) {\n        this.traceBegin(Q, T)\n        let v = this.execExpr(Q.childs()[0], T)\n        let result\n        /* jscs: disable */\n        switch (Q.get(\"op\")) {\n            case \"!\": result = !util.coerce(v, \"boolean\"); break\n            case \"~\": result = ~util.coerce(v, \"number\");  break\n        }\n        /* jscs: enable */\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprFuncCall (Q, T) {\n        this.traceBegin(Q, T)\n        let id = Q.get(\"id\")\n        let args = [ this.adapter, T ]\n        Q.childs().forEach((Q) => {\n            args.push(this.execExpr(Q, T))\n        })\n        let result = this.funcs.run(id, args)\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprAttribute (Q, T) {\n        this.traceBegin(Q, T)\n        let id = Q.get(\"id\")\n        let result = this.adapter.getNodeAttrValue(T, id)\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprParam (Q, T) {\n        this.traceBegin(Q, T)\n        let id = Q.get(\"id\")\n        if (typeof this.params[id] === \"undefined\")\n            throw new Error(\"invalid parameter \\\"\" + id + \"\\\"\")\n        let result = this.params[id]\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprLiteralString (Q, T) {\n        this.traceBegin(Q, T)\n        let result = Q.get(\"value\")\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprLiteralRegExp (Q, T) {\n        this.traceBegin(Q, T)\n        let result = Q.get(\"value\")\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprLiteralNumber (Q, T) {\n        this.traceBegin(Q, T)\n        let result = Q.get(\"value\")\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprLiteralValue (Q, T) {\n        this.traceBegin(Q, T)\n        let result = Q.get(\"value\")\n        this.traceEnd(Q, T, result)\n        return result\n    }\n\n    execExprPath (Q, T) {\n        this.traceBegin(Q, T)\n        let result = this.execPath(Q, T)\n        this.traceEnd(Q, T, result)\n        return result\n    }\n}\n\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2016 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/* eslint no-console: 0 */\n\nimport util from \"./astq-util.js\"\n\nexport default class ASTQQueryTrace {\n    /*  determine output prefix based on tree depth  */\n    prefixOf (Q, T) {\n        let depth = 0\n        let node = Q\n        while ((node = node.parent()) !== null)\n            depth++\n        let prefix1 = util.pad(\"\", 4 * depth)\n        depth = 0\n        node = T\n        while ((node = this.adapter.getParentNode(node, \"*\")) !== null)\n            depth++\n        let prefix2 = util.pad(\"\", 4 * depth)\n        return { prefix1, prefix2 }\n    }\n\n    /*  begin tracing step  */\n    traceBegin (Q, T) {\n        if (!this.trace)\n            return\n        let { prefix1, prefix2 } = this.prefixOf(Q, T)\n        console.log(\"ASTQ: execute: | \" +\n            util.pad(prefix1 + Q.type() + \" (\", -60) + \" | \" +\n            prefix2 + this.adapter.getNodeType(T))\n    }\n\n    /*  end tracing step  */\n    traceEnd (Q, T, val) {\n        if (!this.trace)\n            return\n        let { prefix1, prefix2 } = this.prefixOf(Q, T)\n        let result\n        if (val === undefined)\n            result = \"undefined\"\n        else if (typeof val === \"object\" && val instanceof Array) {\n            result = \"[\"\n            val.forEach((node) => {\n                result += \"node(\" + this.adapter.getNodeType(node) + \"),\"\n            })\n            result = result.replace(/,$/, \"\") + \"]\"\n        }\n        else\n            result = typeof val + \"(\" + val + \")\"\n        if (result.length > 60)\n            result = result.substr(0, 60) + \"...\"\n        console.log(\"ASTQ: execute: | \" +\n            util.pad(prefix1 + \"): \" + result, -60) + \" | \" +\n            prefix2 + this.adapter.getNodeType(T))\n    }\n}\n\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2016 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/* global __dirname: true */\n/* global console: true */\n/* eslint no-console: 0 */\n\n/*  load external dependencies  */\nconst ASTY     = require(\"asty\")\nconst PEG      = require(\"pegjs-otf\")\nconst PEGUtil  = require(\"pegjs-util\")\n\n/*  get query parser (by loading and on-the-fly compiling PEG.js grammar)  */\nconst ASTQQueryParse = PEG.generateFromFile(\n    __dirname + \"/astq-query-parse.pegjs\",\n    { optimize: \"speed\", cache: true }\n)\n\n/*  get query executor  */\nimport ASTQQueryExec from \"./astq-query-exec.js\"\n\nexport default class ASTQQuery {\n    /*  create a new instance of the query instance  */\n    constructor (selector) {\n        this.asty = new ASTY()\n        this.ast = null\n        if (selector)\n            this.compile(selector)\n    }\n\n    /*  compile query selector into AST  */\n    compile (selector, trace) {\n        if (trace)\n            console.log(\"ASTQ: compile: +---------------------------------------\" +\n                \"----------------------------------------------------------------\\n\" +\n                \"ASTQ: compile: | \" + selector)\n        let result = PEGUtil.parse(ASTQQueryParse, selector, {\n            startRule: \"query\",\n            makeAST: (line, column, offset, args) => {\n                return this.asty.create.apply(this.asty, args).pos(line, column, offset)\n            }\n        })\n        if (result.error !== null)\n            throw new Error(\"ASTQ: compile: query parsing failed:\\n\" +\n                PEGUtil.errorMessage(result.error, true).replace(/^/mg, \"ERROR: \"))\n        this.ast = result.ast\n        if (trace)\n            console.log(\"ASTQ: compile: +---------------------------------------\" +\n                \"----------------------------------------------------------------\\n\" +\n                this.dump().replace(/\\n$/, \"\").replace(/^/mg, \"ASTQ: compile: | \"))\n        return this\n    }\n\n    /*  dump the query AST  */\n    dump () {\n        return this.ast.dump()\n    }\n\n    /*  execute the query AST onto node  */\n    execute (node, adapter, params, funcs, trace) {\n        if (trace)\n            console.log(\"ASTQ: execute: +---------------------------------------\" +\n                \"-----------------------+----------------------------------------\")\n        let qe = new ASTQQueryExec(adapter, params, funcs, trace)\n        return qe.execQuery(this.ast, node)\n    }\n}\n\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2016 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\nexport default class ASTQUtil {\n    /*  pad a string with spaces to the left/right  */\n    static pad (str, num) {\n        let n = num < 0 ? -num : num\n        if (str.length > n)\n            str = str.substr(0, n)\n        else {\n            let pad = Array((n + 1) - str.length).join(\" \")\n            str = num < 0 ? (str + pad) : (pad + str)\n        }\n        return str\n    }\n\n    /*  check whether value is \"true\" (or can be considered to be true)  */\n    static truthy (value) {\n        let result\n        switch (typeof value) {\n            case \"boolean\":\n                result = value\n                break\n            case \"number\":\n                result = (value !== 0 && !isNaN(value))\n                break\n            case \"string\":\n                result = (value !== \"\")\n                break\n            case \"object\":\n                result = false\n                if (value !== null) {\n                    result = true\n                    if (value instanceof Array)\n                        result = value.length > 0\n                }\n                break\n            default:\n                result = false\n        }\n        return result\n    }\n\n    /*  coerce value to particular type  */\n    static coerce (value, type) {\n        if (typeof value !== type) {\n            try {\n                switch (type) {\n                    case \"boolean\":\n                        if (typeof value !== \"boolean\")\n                            value = Boolean(value)\n                        break\n                    case \"number\":\n                        if (typeof value !== \"number\")\n                            value = Number(value)\n                        break\n                    case \"string\":\n                        if (typeof value !== \"string\")\n                            value = String(value)\n                        break\n                    case \"regexp\":\n                        if (!(typeof value === \"object\" && value instanceof RegExp))\n                            value = new RegExp(value)\n                        break\n                }\n            }\n            catch (e) {\n                throw new Error(\"cannot coerce value into type \" + type)\n            }\n        }\n        return value\n    }\n}\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2016 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/* global 2: false */\n/* global 0: false */\n/* global 0: false */\n/* global 20161120:  false */\n\nlet version = {\n    major: 2,\n    minor: 0,\n    micro: 0,\n    date:  20161120\n}\n\nexport default version\n\n","/*\n**  ASTq -- Abstract Syntax Tree (AST) Query Engine\n**  Copyright (c) 2014-2016 Ralf S. Engelschall <rse@engelschall.com>\n**\n**  Permission is hereby granted, free of charge, to any person obtaining\n**  a copy of this software and associated documentation files (the\n**  \"Software\"), to deal in the Software without restriction, including\n**  without limitation the rights to use, copy, modify, merge, publish,\n**  distribute, sublicense, and/or sell copies of the Software, and to\n**  permit persons to whom the Software is furnished to do so, subject to\n**  the following conditions:\n**\n**  The above copyright notice and this permission notice shall be included\n**  in all copies or substantial portions of the Software.\n**\n**  THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND,\n**  EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n**  MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.\n**  IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY\n**  CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT,\n**  TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE\n**  SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\n*/\n\n/*  load external depdendencies  */\nlet CacheLRU = require(\"cache-lru\")\n\n/*  load internal dependencies  */\nimport ASTQAdapter       from \"./astq-adapter.js\"\nimport ASTQAdapterXMLDOM from \"./astq-adapter-xmldom.js\"\nimport ASTQAdapterPARSE5 from \"./astq-adapter-parse5.js\"\nimport ASTQAdapterMOZAST from \"./astq-adapter-mozast.js\"\nimport ASTQAdapterASTY   from \"./astq-adapter-asty.js\"\nimport ASTQFuncs         from \"./astq-funcs.js\"\nimport ASTQFuncsSTD      from \"./astq-funcs-std.js\"\nimport ASTQQuery         from \"./astq-query.js\"\nimport ASTQVersion       from \"./astq-version.js\"\n\n/*  define the API class  */\nclass ASTQ {\n    /*  create a new ASTq instance  */\n    constructor () {\n        /*  create adapter registry and pre-register standard adapters  */\n        this._adapter = new ASTQAdapter()\n            .register(ASTQAdapterXMLDOM, false)\n            .register(ASTQAdapterPARSE5, false)\n            .register(ASTQAdapterMOZAST, false)\n            .register(ASTQAdapterASTY,   false)\n\n        /*  create function registry and pre-register standard functions  */\n        this._funcs = new ASTQFuncs()\n        for (let name in ASTQFuncsSTD)\n            this.func(name, ASTQFuncsSTD[name])\n\n        /*  create LRU cache  */\n        this._cache = new CacheLRU()\n    }\n\n    /*  return the version information  */\n    version () {\n        return ASTQVersion\n    }\n\n    /*  switch to a single custom adapter  */\n    adapter (adapter, force = false) {\n        if (arguments.length < 1 || arguments.length > 2)\n            throw new Error(\"ASTQ#adapter: invalid number of arguments\")\n        this._adapter.unregister()\n        if (!(typeof adapter === \"object\" && adapter instanceof Array))\n            adapter = [ adapter ]\n        if (adapter.length > 1 && force)\n            throw new Error(\"ASTQ#adapter: you can force just a single adapter to not taste the AST node\")\n        adapter.forEach((adapter) => {\n            if (typeof adapter === \"string\") {\n                if (adapter === \"mozast\")      adapter = ASTQAdapterMOZAST\n                else if (adapter === \"xmldom\") adapter = ASTQAdapterXMLDOM\n                else if (adapter === \"parse5\") adapter = ASTQAdapterPARSE5\n                else if (adapter === \"asty\")   adapter = ASTQAdapterASTY\n                else\n                    throw new Error(\"ASTQ#adapter: unknown built-in adapter\")\n            }\n            this._adapter.register(adapter, force)\n        })\n        return this\n    }\n\n    /*  register an additional function  */\n    func (name, func) {\n        if (arguments.length !== 2)\n            throw new Error(\"ASTQ#func: invalid number of arguments\")\n        this._funcs.register(name, func)\n        return this\n    }\n\n    /*  configure the LRU cache limit  */\n    cache (entries) {\n        if (arguments.length !== 1)\n            throw new Error(\"ASTQ#cache: invalid number of arguments\")\n        this._cache.limit(entries)\n        return this\n    }\n\n    /*  individual step 1: compile selector DSL into a query AST  */\n    compile (selector, trace) {\n        if (arguments.length < 1)\n            throw new Error(\"ASTQ#compile: too less arguments\")\n        if (arguments.length > 2)\n            throw new Error(\"ASTQ#compile: too many arguments\")\n        if (trace === undefined)\n            trace = false\n        let query = this._cache.get(selector)\n        if (query === undefined) {\n            query = new ASTQQuery()\n            query.compile(selector, trace)\n            this._cache.set(selector, query)\n        }\n        return query\n    }\n\n    /*  individual step 2: execute query AST onto node  */\n    execute (node, query, params, trace) {\n        if (arguments.length < 2)\n            throw new Error(\"ASTQ#execute: too less arguments\")\n        if (arguments.length > 4)\n            throw new Error(\"ASTQ#execute: too many arguments\")\n        if (params === undefined)\n            params = {}\n        if (trace === undefined)\n            trace = false\n        let adapter = this._adapter.select(node)\n        if (adapter === undefined)\n            throw new Error(\"ASTQ#execute: no suitable adapter found for node\")\n        return query.execute(node, adapter, params, this._funcs, trace)\n    }\n\n    /*  all-in-one step: execute selector DSL onto node  */\n    query (node, selector, params, trace) {\n        if (arguments.length < 2)\n            throw new Error(\"ASTQ#query: too less arguments\")\n        if (arguments.length > 4)\n            throw new Error(\"ASTQ#query: too many arguments\")\n        if (params === undefined)\n            params = {}\n        if (trace === undefined)\n            trace = false\n        return this.execute(node, this.compile(selector, trace), params, trace)\n    }\n}\n\n/*  export the traditional way for interoperability reasons\n    (as Babel would export an object with a 'default' field)  */\nmodule.exports = ASTQ\n\n"]}